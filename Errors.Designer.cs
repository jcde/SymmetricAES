//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ICB.Domain {
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, formatting them, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilderEx class via the ResXFileCodeGeneratorEx custom tool.
    // To add or remove a member, edit your .ResX file then rerun the ResXFileCodeGeneratorEx custom tool or rebuild your VS.NET project.
    // Copyright (c) Dmytro Kryvko 2006-2017 (http://dmytro.kryvko.googlepages.com/)
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("DMKSoftware.CodeGenerators.Tools.StronglyTypedResourceBuilderEx", "2.6.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
#if !SILVERLIGHT
    [global::System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=true)]
#endif
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
    public partial class Errors {
        
        private static global::System.Resources.ResourceManager _resourceManager;
        
        private static object _internalSyncObject;
        
        private static global::System.Globalization.CultureInfo _resourceCulture;
        
        /// <summary>
        /// Initializes a Errors object.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Errors() {
        }
        
        /// <summary>
        /// Thread safe lock object used by this class.
        /// </summary>
        public static object InternalSyncObject {
            get {
                if (object.ReferenceEquals(_internalSyncObject, null)) {
                    global::System.Threading.Interlocked.CompareExchange(ref _internalSyncObject, new object(), null);
                }
                return _internalSyncObject;
            }
        }
        
        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(_resourceManager, null)) {
                    global::System.Threading.Monitor.Enter(InternalSyncObject);
                    try {
                        if (object.ReferenceEquals(_resourceManager, null)) {
                            global::System.Threading.Interlocked.Exchange(ref _resourceManager, new global::System.Resources.ResourceManager("ICB.Domain.Errors", typeof(Errors).Assembly));
                        }
                    }
                    finally {
                        global::System.Threading.Monitor.Exit(InternalSyncObject);
                    }
                }
                return _resourceManager;
            }
        }
        
        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return _resourceCulture;
            }
            set {
                _resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Security violated'.
        /// </summary>
        public static string AppTokenWrong {
            get {
                return ResourceManager.GetString(ResourceNames.AppTokenWrong, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Enter captcha symbols'.
        /// </summary>
        public static string CaptchaRequired {
            get {
                return ResourceManager.GetString(ResourceNames.CaptchaRequired, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Failed to connect'.
        /// </summary>
        public static string ChromeFailed2Start {
            get {
                return ResourceManager.GetString(ResourceNames.ChromeFailed2Start, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Please Sign in first'.
        /// </summary>
        public static string EmailForAppNotLoggedIn {
            get {
                return ResourceManager.GetString(ResourceNames.EmailForAppNotLoggedIn, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Security violated'.
        /// </summary>
        public static string EmailNotLoggedIn {
            get {
                return ResourceManager.GetString(ResourceNames.EmailNotLoggedIn, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Email or password wrong'.
        /// </summary>
        public static string EmailOrPasswordWrong {
            get {
                return ResourceManager.GetString(ResourceNames.EmailOrPasswordWrong, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Wrong email format'.
        /// </summary>
        public static string EmailWrong {
            get {
                return ResourceManager.GetString(ResourceNames.EmailWrong, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Forbidden'.
        /// </summary>
        public static string Forbidden {
            get {
                return ResourceManager.GetString(ResourceNames.Forbidden, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Password was modified'.
        /// </summary>
        public static string PasswordWrong {
            get {
                return ResourceManager.GetString(ResourceNames.PasswordWrong, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Account duplication'.
        /// </summary>
        public static string PrimaryEmailDuplicateForApp {
            get {
                return ResourceManager.GetString(ResourceNames.PrimaryEmailDuplicateForApp, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Read only. No sign up and modifications'.
        /// </summary>
        public static string ReadonlyMode {
            get {
                return ResourceManager.GetString(ResourceNames.ReadonlyMode, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Saving error'.
        /// </summary>
        public static string SavingError {
            get {
                return ResourceManager.GetString(ResourceNames.SavingError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Synchronization timeout'.
        /// </summary>
        public static string SynchTimeout {
            get {
                return ResourceManager.GetString(ResourceNames.SynchTimeout, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Server too busy'.
        /// </summary>
        public static string Timeout {
            get {
                return ResourceManager.GetString(ResourceNames.Timeout, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Server will respond later'.
        /// </summary>
        public static string TimeoutWithHope {
            get {
                return ResourceManager.GetString(ResourceNames.TimeoutWithHope, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Modifications apply error'.
        /// </summary>
        public static string TreeApplyBad {
            get {
                return ResourceManager.GetString(ResourceNames.TreeApplyBad, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to '2-step verification'.
        /// </summary>
        public static string TwoStepRequest {
            get {
                return ResourceManager.GetString(ResourceNames.TwoStepRequest, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Please upgrade to new version'.
        /// </summary>
        public static string UpgradeRequired {
            get {
                return ResourceManager.GetString(ResourceNames.UpgradeRequired, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Wrong parameter'.
        /// </summary>
        public static string WrongParameter {
            get {
                return ResourceManager.GetString(ResourceNames.WrongParameter, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Lists all the resource names as constant string fields.
        /// </summary>
        public class ResourceNames {
            
            /// <summary>
            /// Stores the resource name 'AppTokenWrong'.
            /// </summary>
            public const string AppTokenWrong = "AppTokenWrong";
            
            /// <summary>
            /// Stores the resource name 'CaptchaRequired'.
            /// </summary>
            public const string CaptchaRequired = "CaptchaRequired";
            
            /// <summary>
            /// Stores the resource name 'ChromeFailed2Start'.
            /// </summary>
            public const string ChromeFailed2Start = "ChromeFailed2Start";
            
            /// <summary>
            /// Stores the resource name 'EmailForAppNotLoggedIn'.
            /// </summary>
            public const string EmailForAppNotLoggedIn = "EmailForAppNotLoggedIn";
            
            /// <summary>
            /// Stores the resource name 'EmailNotLoggedIn'.
            /// </summary>
            public const string EmailNotLoggedIn = "EmailNotLoggedIn";
            
            /// <summary>
            /// Stores the resource name 'EmailOrPasswordWrong'.
            /// </summary>
            public const string EmailOrPasswordWrong = "EmailOrPasswordWrong";
            
            /// <summary>
            /// Stores the resource name 'EmailWrong'.
            /// </summary>
            public const string EmailWrong = "EmailWrong";
            
            /// <summary>
            /// Stores the resource name 'Forbidden'.
            /// </summary>
            public const string Forbidden = "Forbidden";
            
            /// <summary>
            /// Stores the resource name 'PasswordWrong'.
            /// </summary>
            public const string PasswordWrong = "PasswordWrong";
            
            /// <summary>
            /// Stores the resource name 'PrimaryEmailDuplicateForApp'.
            /// </summary>
            public const string PrimaryEmailDuplicateForApp = "PrimaryEmailDuplicateForApp";
            
            /// <summary>
            /// Stores the resource name 'ReadonlyMode'.
            /// </summary>
            public const string ReadonlyMode = "ReadonlyMode";
            
            /// <summary>
            /// Stores the resource name 'SavingError'.
            /// </summary>
            public const string SavingError = "SavingError";
            
            /// <summary>
            /// Stores the resource name 'SynchTimeout'.
            /// </summary>
            public const string SynchTimeout = "SynchTimeout";
            
            /// <summary>
            /// Stores the resource name 'Timeout'.
            /// </summary>
            public const string Timeout = "Timeout";
            
            /// <summary>
            /// Stores the resource name 'TimeoutWithHope'.
            /// </summary>
            public const string TimeoutWithHope = "TimeoutWithHope";
            
            /// <summary>
            /// Stores the resource name 'TreeApplyBad'.
            /// </summary>
            public const string TreeApplyBad = "TreeApplyBad";
            
            /// <summary>
            /// Stores the resource name 'TwoStepRequest'.
            /// </summary>
            public const string TwoStepRequest = "TwoStepRequest";
            
            /// <summary>
            /// Stores the resource name 'UpgradeRequired'.
            /// </summary>
            public const string UpgradeRequired = "UpgradeRequired";
            
            /// <summary>
            /// Stores the resource name 'WrongParameter'.
            /// </summary>
            public const string WrongParameter = "WrongParameter";
        }
    }
}
